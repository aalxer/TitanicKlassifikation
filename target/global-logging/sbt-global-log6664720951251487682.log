[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\alwai\AppData\Local\Temp\idea2.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\alwai\AppData\Local\Temp\idea2.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.7.1 (JetBrains s.r.o. Java 17.0.9)
[debug]       Load.loadUnit: plugins took 117.2017ms
[debug]       Load.loadUnit: defsScala took 0.3977ms
[debug] [Loading] Scanning directory C:\Users\alwai\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\alwai\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 19.5839 ms
[debug]           Load.resolveProject(global-plugins) took 53.2245ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\alwai\.sbt\1.0\plugins, plugins: List(<none>))) took 100.8383ms
[debug] [Loading] Done in C:\Users\alwai\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 137.6342ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3024ms
[debug]     Load.loadUnit(file:/C:/Users/alwai/.sbt/1.0/plugins/, ...) took 269.5591ms
[debug]   Load.apply: load took 620.0686ms
[debug]   Load.apply: resolveProjects took 11.2255ms
[debug]   Load.apply: finalTransforms took 101.1323ms
[debug]   Load.apply: config.delegates took 7.4986ms
[debug]   Load.apply: Def.make(settings)... took 767.7507ms
[debug]   Load.apply: structureIndex took 141.5938ms
[debug]   Load.apply: mkStreams took 1.8825ms
[info] loading global plugins from C:\Users\alwai\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3667.035ms
[debug]           Load.loadUnit: plugins took 54.0175ms
[debug]           Load.loadUnit: defsScala took 0.0099ms
[debug] [Loading] Scanning directory F:\Scala Workspace\Beleg3KlassifikationAufgabe\project
[debug]             Load.loadUnit: mkEval took 7.1491ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in F:\Scala Workspace\Beleg3KlassifikationAufgabe\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.4949 ms
[info] loading settings for project beleg3klassifikationaufgabe-build from plugins.sbt,idea2.sbt ...
[debug]               Load.resolveProject(beleg3klassifikationaufgabe-build) took 10.7044ms
[debug]             Load.loadTransitive: finalizeProject(Project(id beleg3klassifikationaufgabe-build, base: F:\Scala Workspace\Beleg3KlassifikationAufgabe\project, plugins: List(<none>))) took 14.1559ms
[debug] [Loading] Done in F:\Scala Workspace\Beleg3KlassifikationAufgabe\project, returning: (beleg3klassifikationaufgabe-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 303.9803ms
[debug]           Load.loadUnit: cleanEvalClasses took 9.409ms
[debug]         Load.loadUnit(file:/F:/Scala%20Workspace/Beleg3KlassifikationAufgabe/project/, ...) took 370.2053ms
[debug]       Load.apply: load took 378.5702ms
[debug]       Load.apply: resolveProjects took 0.2106ms
[debug]       Load.apply: finalTransforms took 13.1373ms
[debug]       Load.apply: config.delegates took 0.5124ms
[debug]       Load.apply: Def.make(settings)... took 116.339ms
[debug]       Load.apply: structureIndex took 39.2229ms
[debug]       Load.apply: mkStreams took 0.0328ms
[info] loading project definition from F:\Scala Workspace\Beleg3KlassifikationAufgabe\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1255.4503ms
[debug]     Load.loadUnit: defsScala took 0.0061ms
[debug] [Loading] Scanning directory F:\Scala Workspace\Beleg3KlassifikationAufgabe
[debug]       Load.loadUnit: mkEval took 0.412ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(com.typesafe.sbteclipse.plugin.EclipsePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(com.typesafe.sbteclipse.plugin.EclipsePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,com.typesafe.sbteclipse.plugin.EclipsePlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 4.3038 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 47.5589ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: F:\Scala Workspace\Beleg3KlassifikationAufgabe, plugins: List(<none>))) took 54.6386ms
[debug] [Loading] Done in F:\Scala Workspace\Beleg3KlassifikationAufgabe, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 208.659ms
[debug]     Load.loadUnit: cleanEvalClasses took 8.7639ms
[debug]   Load.loadUnit(file:/F:/Scala%20Workspace/Beleg3KlassifikationAufgabe/, ...) took 1474.3251ms
[debug] Load.apply: load took 1479.579ms
[debug] Load.apply: resolveProjects took 0.2015ms
[debug] Load.apply: finalTransforms took 55.8445ms
[debug] Load.apply: config.delegates took 1.1189ms
[debug] Load.apply: Def.make(settings)... took 210.6794ms
[debug] Load.apply: structureIndex took 52.95ms
[debug] Load.apply: mkStreams took 0.0038ms
[info] set current project to Klassifikation_Aufgabe (in build file:/F:/Scala%20Workspace/Beleg3KlassifikationAufgabe/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 62760 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 62760, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Klassifikation_Aufgabe (in build file:/F:/Scala%20Workspace/Beleg3KlassifikationAufgabe/)
[debug] > Exec(idea-shell, None, None)
